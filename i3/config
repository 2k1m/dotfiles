# i3 config file

# Set mod key
set $mod Mod1
set $alt Mod4

# Set monitor variables
set $monL DVI-D-0
set $monR HDMI-0

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:FiraCode 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# Monitor Settings
exec_always --no-startup-id "xrandr --output HDMI-0 --right-of DVI-D-0 && xrandr --output HDMI-0 --rotate right"

# wallpaper
exec_always --no-startup-id nitrogen --restore

# compositor
exec_always --no-startup-id picom

# focusflash
exec_always --no-startup-id flashfocus

# dunno
exec_always --no-startup-id "xset s off; xset -dpms"

# redshift
#exec_always --no-startup-id "redshift"

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Set capslock to ctrl
exec_always --no-startup-id "setxkbmap -option caps:ctrl_modifier"

# Disable screen saver & power saving feature
exec_always --no-startup-id "xset s off; xset -dpms"


# Stop focus following mouse
focus_follows_mouse no

# Exec polybar
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty
bindsym $alt+Return exec firefox

# flash focused window
#bindsym $mod+n exec --no-startup-id flash_window

# kill focused window
bindsym $mod+d kill

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
bindsym $mod+space exec --no-startup-id rofi -show drun -show-icons
bindsym $alt+space exec --no-startup-id rofi -show window

# window designs
gaps inner 5
gaps outer 0
#smart_gaps on
for_window [class=".*"] border pixel 1
# coolors.co
# class                 border  bground text    indicator child_border
client.focused          #11eeee #6272A4 #F8F8F2 #11eeee   #11eeee
client.focused_inactive #000000 #44475A #F8F8F2 #000000   #000000
client.unfocused        #000000 #000000 #000000 #000000   #000000
client.urgent           #44475A #FF5555 #F8F8F2 #FF5555   #FF5555
client.placeholder      #282A36 #282A36 #F8F8F2 #282A36   #282A36
client.background       #F8F8F2

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
#bindsym $mod+Left focus left
#bindsym $mod+Down focus down
#bindsym $mod+Up focus up
#bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
#bindsym $mod+Shift+Left move left
#bindsym $mod+Shift+Down move down
#bindsym $mod+Shift+Up move up
#bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Shift+v split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
bindsym $mod+Shift+f fullscreen toggle global

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
#bindsym $mod+w layout tabbed
#bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
#bindsym $mod+space focus mode_toggle

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.

# Workspaces for left

set $wsL1 "1:[Q]"
set $wsL2 "2:[W]eb"
set $wsL3 "3:[E]"
set $wsL4 "4:[R]esearch"
set $wsL5 "5:[T]"
set $wsL6 "6:[S]lack"
set $wsL7 "7:[A]ndroid"

set $wsR1 "1:[Y]"
set $wsR2 "2:[U]"
set $wsR3 "3:[I]nbox"
set $wsR4 "4:[O]bsidian"
set $wsR5 "5:[P]ersonal"
set $wsR6 "5:[[]"

# switch to workspace
bindsym $mod+q workspace $wsL1
bindsym $mod+w workspace $wsL2
bindsym $mod+e workspace $wsL3
bindsym $mod+r workspace $wsL4
bindsym $mod+t workspace $wsL5
bindsym $mod+s workspace $wsL6
bindsym $mod+a workspace $wsL7

bindsym $mod+y workspace $wsR1
bindsym $mod+u workspace $wsR2
bindsym $mod+i workspace $wsR3
bindsym $mod+o workspace $wsR4
bindsym $mod+p workspace $wsR5
bindsym $mod+bracketleft workspace $wsR6

#bindsym $mod+n workspace $wsL1; workspace $wsR1
#bindsym $mod+m workspace $wsL2; workspace $wsR2
#bindsym $mod+comma workspace $wsL3; workspace $wsR3
#bindsym $mod+period workspace $wsL4; workspace $wsR4

bindsym $mod+Tab workspace back_and_forth

# move focused container to workspace
bindsym $mod+Shift+q move container to workspace $wsL1
bindsym $mod+Shift+w move container to workspace $wsL2
bindsym $mod+Shift+e move container to workspace $wsL3
bindsym $mod+Shift+r move container to workspace $wsL4
bindsym $mod+Shift+t move container to workspace $wsL5
bindsym $mod+Shift+s move container to workspace $wsL6
bindsym $mod+Shift+a move container to workspace $wsL7

bindsym $mod+Shift+y move container to workspace $wsR1
bindsym $mod+Shift+u move container to workspace $wsR2
bindsym $mod+Shift+i move container to workspace $wsR3
bindsym $mod+Shift+o move container to workspace $wsR4
bindsym $mod+Shift+p move container to workspace $wsR5

# move to workspace with focused container
#bindsym $mod+Ctrl+1 move container to workspace number $ws1; workspace $ws1
#bindsym $mod+Ctrl+2 move container to workspace number $ws2; workspace $ws2
#bindsym $mod+Ctrl+3 move container to workspace number $ws3; workspace $ws3
#bindsym $mod+Ctrl+4 move container to workspace number $ws4; workspace $ws4
#bindsym $mod+Ctrl+5 move container to workspace number $ws5; workspace $ws5
#bindsym $mod+Ctrl+6 move container to workspace number $ws6; workspace $ws6
#bindsym $mod+Ctrl+7 move container to workspace number $ws7; workspace $ws7
#bindsym $mod+Ctrl+8 move container to workspace number $ws8; workspace $ws8
#bindsym $mod+Ctrl+9 move container to workspace number $ws9; workspace $ws9
#bindsym $mod+Ctrl+0 move container to workspace number $ws10; workspace $ws10

# assigning workspaces
workspace $wsL1 output $monL
workspace $wsL2 output $monL
workspace $wsL3 output $monL
workspace $wsL4 output $monL
workspace $wsL5 output $monL
workspace $wsL6 output $monL
workspace $wsL7 output $monL

workspace $wsR1 output $monR
workspace $wsR2 output $monR
workspace $wsR3 output $monR
workspace $wsR4 output $monR
workspace $wsR5 output $monR

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
#bindsym $mod+Ctrl+r reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Ctrl+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Ctrl+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# Set shut down, restart and locking features
bindsym $mod+Escape mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+Ctrl+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+Ctrl+r mode "default"
}

bindsym $mod+Ctrl+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#        status_command i3status
#}
